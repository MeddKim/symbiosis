allprojects {
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'com.palantir.docker'
}

boolean includedLocalCoreDomain = false


subprojects {
    apply plugin: 'java'
    apply plugin: "io.spring.dependency-management"
    apply plugin: 'org.springframework.boot'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    if (project.name.equals("core-domain")) {
        includedLocalCoreDomain = true
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    //以下是打包信息
    group 'symbiosis-account'
    version '1.0-SNAPSHOT'

    final String env = System.getProperty("env")

    if ("prod".equalsIgnoreCase(System.getProperty("env"))) {
        version '1.0-RELEASE'
    }

    ext{
        springCloudVersion = 'Finchley.SR2'
        springBootVersion = '2.0.7.RELEASE'
        springBootAdminVersion = '2.0.4'
    }



//    final Set<String> excludeProjects = new HashSet<>(Arrays.asList("core-domain", "remote-service"))
//
//    if (includedLocalCoreDomain) {
//        if (!excludeProjects.contains(project.name)) {
//            compile project(':core-domain')
//        }
//    } else {
//        if ("prod".equalsIgnoreCase(System.getProperty("env")) || "prod-aws".equalsIgnoreCase(System.getProperty("env"))) {
//            compile group: "com.chejianer.eshop", name: "core-domain", version: "1.0-RELEASE", changing: true
//        } else {
//            compile group: "com.chejianer.eshop", name: "core-domain", version: "1.0-SNAPSHOT", changing: true
//        }
//    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    repositories {
        maven {
            url "${nexusUrl}/repository/maven-public/"
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
    }
}


buildscript {
    ext {
        springBootVersion = '2.0.7.RELEASE'
    }
    repositories {
        maven {
            url "${nexusUrl}/repository/maven-public/"
            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.20.1'
    }
}

